<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.blj.mapper.UserMapper">

    <resultMap type="com.blj.pojo.User" id="User">
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="age" property="age"/>
        <result column="password" property="password"/>
        <result column="create_date" property="createDate"/>
        <result column="create_time" property="createTime"/>

    </resultMap>

    <sql id="Base_Column_List">
    id, name,age,password,create_date,create_time
</sql>

    <sql id="simple_where">
        <where>
            <if test="id!=null">and id=#{id}</if>
            <if test="name!=null and name!=''">and name=#{name}</if>
            <if test="age!=null">and age=#{age}</if>
            <if test="password!=null and password!=''">and password=#{password}</if>
            <if test="createDate!=null">and create_date=#{createDate}</if>
            <if test="createTime!=null">and create_time=#{createTime}</if>

        </where>

    </sql>

    <insert id="save">
        insert into t_user (name,age,password,create_date,create_time)
        values
       (#{name},#{age},#{password},#{createDate},#{createTime})
    </insert>

    <select id="queryList" resultMap="User">
        select
        <include refid="Base_Column_List"/>
        from t_user
        <include refid="simple_where"/>
        <if test="orderBy!=null and orderBy!=''">
            order by ${orderBy} desc
        </if>
        <if test="limit!=null">
            limit 0,${limit}
        </if>

    </select>

    <select id="queryById" resultMap="User">
    select * from  t_user where id=#{id}
    </select>

    <select id="queryCount" resultType="java.lang.Integer">
        select count(1)
        from pc_liq_record
        <include refid="simple_where"/>
    </select>

    <select id="batchSave">
        insert into t_user (  name,age,password,create_date,create_time )
        values
        <foreach collection="userList" item="item" index="index" separator=",">
            (#{item.name},#{item.age},#{item.password},#{item.createDate},#{item.createTime})
        </foreach>

    </select>

    <select id="querySum" resultType="java.math.BigDecimal">
        select sum(age)
        from  t_user
    </select>

    <update id="batchUpdate" parameterType="java.util.List">
        <foreach collection="userList" item="item" index="index" open="" close="" separator=";">
            UPDATE t_user
            <set>
                age=#{item.age}
            </set>
            <where>
                id = #{item.id}
            </where>
        </foreach>
    </update>

    <update id="batchUpdateWithTwoParam">
        <foreach collection="userList" item="item" index="index" open="" close="" separator=";">
            UPDATE t_user
            <set>
                age=#{item.age}
            </set>
            <where>
                id = #{id}
            </where>
        </foreach>
    </update>

    <select id="existTable" resultType="Integer">
        select count(1) from information_schema.TABLES where table_schema = #{dbName} and  table_name = #{tableName}
    </select>



    <select id="queryByTimeInterval" resultType="com.blj.pojo.User">
        select
       *
        from t_user
        <where>
            <if test="id!=null">
                id>#{id}
            </if>
            and  create_date&gt;=#{createDateBegin}
            and create_date &lt;=#{createDateEnd}
        </where>
        order by id asc
        LIMIT 0,${endLimit}
    </select>
    <select id="findAll" resultType="com.blj.pojo.User">
        select  *  from  t_user
    </select>

    <select id="queryByName" resultType="com.blj.pojo.User">
         select  *  from  t_user where name=#{name}
    </select>

    <update id="dropTable">
         DROP TABLE IF EXISTS ${tableName}
    </update>

    <update id="createUserTable" >
        CREATE TABLE ${tableName} (
  `id` bigint(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(30) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `age` int(10) DEFAULT NULL,
  `password` varchar(255) DEFAULT NULL,
  `create_date` date DEFAULT NULL,
  `create_time` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=17329 DEFAULT CHARSET=utf8
</update>

</mapper>